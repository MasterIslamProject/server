{"version":3,"sources":["../../src/auth/auth-endpoint.js"],"names":["makeAuthEndpointHandler","authQuery","handle","httpRequest","method","getAllHeaders","statusCode","errorMessage","email","queryParams","token","headers","authorization","undefined","res","status","data","JSON","stringify","result","checkToken","findByHeader"],"mappings":";;;;;;;AAAA;;AAKA;;AACA;;;;AAEe,SAASA,uBAAT,CAAiC;AAACC,EAAAA;AAAD,CAAjC,EAA6C;AAE1D,SAAO,eAAeC,MAAf,CAAsBC,WAAtB,EAAkC;AACvC,YAAQA,WAAW,CAACC,MAApB;AAEI,WAAK,KAAL;AACE,eAAOC,aAAa,CAACF,WAAD,CAApB;;AAEF,WAAK,MAAL;AACE,eAAOE,aAAa,CAACF,WAAD,CAApB;;AAEF,WAAK,QAAL;AACE,eAAOE,aAAa,CAACF,WAAD,CAApB;;AAEF;AACE,eAAO,wBAAc;AACnBG,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAG,GAAEJ,WAAW,CAACC,MAAO;AAFjB,SAAd,CAAP;AAZN;AAiBD,GAlBD;;AAsBA,iBAAeC,aAAf,CAA8BF,WAA9B,EAA2C;AAEzC,UAAM;AAAEK,MAAAA;AAAF,QAAYL,WAAW,CAACM,WAAZ,IAA2B,EAA7C;AAEA,QAAIC,KAAK,GAAGP,WAAW,CAACQ,OAAZ,CAAoBC,aAAhC;;AAEA,QAAGF,KAAK,IAAIG,SAAZ,EAAsB;AACpB,YAAMC,GAAG,GAAG;AACV,kBAAU,GADA;AAEV,mBAAW;AAFD,OAAZ;AAIA,aAAO;AACLH,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILL,QAAAA,UAAU,EAAEQ,GAAG,CAACC,MAJX;AAKLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf;AALD,OAAP;AAOD,KAZD,MAaK;AACH,UAAIN,KAAK,KAAKK,SAAd,EAAyB;AACvB,cAAMM,MAAM,GAAG,MAAMlB,SAAS,CAACmB,UAAV,CAAqBV,KAArB,EAA4BF,KAA5B,CAArB;AACA,eAAO;AACLG,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WADJ;AAILL,UAAAA,UAAU,EAAE,GAJP;AAKLU,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,MAAf;AALD,SAAP;AAQD,OAVD,MAWK;AACH,cAAMA,MAAM,GAAG,MAAMlB,SAAS,CAACoB,YAAV,CAAuBX,KAAvB,CAArB;AACA,eAAO;AACLC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WADJ;AAILL,UAAAA,UAAU,EAAEa,MAAM,CAACJ,MAJd;AAKLC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,MAAf;AALD,SAAP;AAQD;AACF;AAEF;AAGF","sourcesContent":["import {\n  UniqueConstraintError,\n  InvalidPropertyError,\n  RequiredParameterError\n} from '../helpers/errors';\nimport makeHttpError from '../helpers/http-error';\nimport makeAuth from './auth';\n\nexport default function makeAuthEndpointHandler({authQuery}){\n \n  return async function handle(httpRequest){\n    switch (httpRequest.method) {\n        \n        case 'GET':\n          return getAllHeaders(httpRequest)\n\n        case 'POST':\n          return getAllHeaders(httpRequest)\n\n        case 'DELETE':\n          return getAllHeaders(httpRequest)\n\n        default:\n          return makeHttpError({\n            statusCode: 405,\n            errorMessage: `${httpRequest.method} method not allowed.`\n          })\n    }\n  }\n  \n\n\n  async function getAllHeaders (httpRequest) { \n    \n    const { email } = httpRequest.queryParams || {} \n\n    var token = httpRequest.headers.authorization\n\n    if(token == undefined){\n      const res = {\n        \"status\": 500,\n        \"message\": \"No token supplied\",\n      }\n      return {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        statusCode: res.status,\n        data: JSON.stringify(res)\n      }\n    }\n    else {\n      if (email !== undefined ){\n        const result = await authQuery.checkToken(token, email)\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else {\n        const result = await authQuery.findByHeader(token);\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: result.status,\n          data: JSON.stringify(result)\n        }\n\n      }\n    }\n      \n  }\n\n\n}"],"file":"auth-endpoint.js"}