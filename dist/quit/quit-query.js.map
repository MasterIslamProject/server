{"version":3,"sources":["../../src/quit/quit-query.js"],"names":["makeQuitQuery","database","Object","freeze","add","findById","getQuit","deleteById","max","before","after","db","query","_id","$lt","makeId","$gt","collection","find","limit","Number","toArray","map","documentToQuit","quitId","quit","quit_id","result","ops","insertOne","catch","mongoError","errorCode","message","split","_","mongoIndex","UniqueConstraintError","success","ok","created","id","found","findOne","deleteOne","n","status","doc"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,SAASA,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAC7C,SAAOC,MAAM,CAACC,MAAP,CAAc;AACjBC,IAAAA,GADiB;AAEjBC,IAAAA,QAFiB;AAGjBC,IAAAA,OAHiB;AAIjBC,IAAAA;AAJiB,GAAd,CAAP;;AAOA,iBAAeD,OAAf,CAAwB;AAAEE,IAAAA,GAAG,GAAG,GAAR;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAA+B,EAAvD,EAA2D;AAEvD,UAAMC,EAAE,GAAG,MAAMV,QAAjB;AACA,UAAMW,KAAK,GAAG,EAAd;;AACA,QAAIH,MAAM,IAAIC,KAAd,EAAqB;AACjBE,MAAAA,KAAK,CAACC,GAAN,GAAY,EAAZ;AACAD,MAAAA,KAAK,CAACC,GAAN,GAAYJ,MAAM,GAAG,EAAE,GAAGG,KAAK,CAACC,GAAX;AAAgBC,QAAAA,GAAG,EAAEH,EAAE,CAACI,MAAH,CAAUN,MAAV;AAArB,OAAH,GAA8CG,KAAK,CAACC,GAAtE;AACAD,MAAAA,KAAK,CAACC,GAAN,GAAYH,KAAK,GAAG,EAAE,GAAGE,KAAK,CAACC,GAAX;AAAgBG,QAAAA,GAAG,EAAEL,EAAE,CAACI,MAAH,CAAUL,KAAV;AAArB,OAAH,GAA6CE,KAAK,CAACC,GAApE;AACH;;AAED,WAAO,CAAC,MAAMF,EAAE,CACfM,UADa,CACF,MADE,EAEbC,IAFa,CAERN,KAFQ,EAGbO,KAHa,CAGPC,MAAM,CAACZ,GAAD,CAHC,EAIba,OAJa,EAAP,EAIKC,GAJL,CAISC,cAJT,CAAP;AAKH;;AAGD,iBAAenB,GAAf,CAAoB;AAAEoB,IAAAA,MAAF;AAAU,OAAGC;AAAb,GAApB,EAAyC;AAErC,UAAMd,EAAE,GAAG,MAAMV,QAAjB;;AACA,QAAIuB,MAAJ,EAAY;AACVE,MAAAA,OAAO,GAAGf,EAAE,CAACI,MAAH,CAAUS,MAAV,CAAV;AACD;;AACD,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAkB,MAAMjB,EAAE,CAC7BM,UAD2B,CAChB,MADgB,EAE3BY,SAF2B,CAEjBJ,IAFiB,EAG3BK,KAH2B,CAGrBC,UAAU,IAAI;AACnB,YAAM,CAACC,SAAD,IAAcD,UAAU,CAACE,OAAX,CAAmBC,KAAnB,CAAyB,GAAzB,CAApB;;AACA,UAAIF,SAAS,KAAK,QAAlB,EAA4B;AAC1B,cAAM,CAACG,CAAD,EAAIC,UAAJ,IAAkBL,UAAU,CAACE,OAAX,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCA,KAAjC,CAAuC,GAAvC,CAAxB;AACA,cAAM,IAAIG,6BAAJ,CACJD,UAAU,KAAK,mBAAf,GAAqC,cAArC,GAAsD,WADlD,CAAN;AAGD;;AACD,YAAML,UAAN;AACD,KAZ2B,CAA9B;AAaA,WAAO;AACHO,MAAAA,OAAO,EAAEX,MAAM,CAACY,EAAP,KAAc,CADpB;AAEHC,MAAAA,OAAO,EAAEjB,cAAc,CAACK,GAAG,CAAC,CAAD,CAAJ;AAFpB,KAAP;AAIH;;AAED,iBAAevB,QAAf,CAAyB;AAAEoC,IAAAA;AAAF,GAAzB,EAAiC;AAC/B,UAAM9B,EAAE,GAAG,MAAMV,QAAjB;AACA,UAAMyC,KAAK,GAAG,MAAM/B,EAAE,CACnBM,UADiB,CACN,MADM,EAEjB0B,OAFiB,CAET;AAAE9B,MAAAA,GAAG,EAAEF,EAAE,CAACI,MAAH,CAAU0B,EAAV;AAAP,KAFS,CAApB;;AAGA,QAAIC,KAAJ,EAAW;AACT,aAAOnB,cAAc,CAACmB,KAAD,CAArB;AACD;;AACD,WAAO,EAAP;AACD;;AAGD,iBAAenC,UAAf,CAA2B;AAAEkC,IAAAA;AAAF,GAA3B,EAAmC;AACjC,UAAM9B,EAAE,GAAG,MAAMV,QAAjB;AAEA,UAAM;AAAE0B,MAAAA;AAAF,QAAa,MAAMhB,EAAE,CAACM,UAAH,CAAc,MAAd,EAAsB2B,SAAtB,CAAgC;AAAC,aAAOjC,EAAE,CAACI,MAAH,CAAU0B,EAAV;AAAR,KAAhC,CAAzB;;AACA,QAAId,MAAM,CAACkB,CAAP,GAAW,CAAf,EAAiB;AACf,aAAO;AACLC,QAAAA,MAAM,EAAE;AADH,OAAP;AAGD,KAJD,MAKK;AACH,aAAO;AACLA,QAAAA,MAAM,EAAE;AADH,OAAP;AAGD;AACF;;AAED,WAASvB,cAAT,CAAyB;AAAEV,IAAAA,GAAG,EAAE4B,EAAP;AAAW,OAAGM;AAAd,GAAzB,EAA8C;AAC1C,WAAO,mBAAS;AAAEN,MAAAA,EAAF;AAAM,SAAGM;AAAT,KAAT,CAAP;AACH;AACJ","sourcesContent":["import makeQuit from './quit'\nimport { UniqueConstraintError } from '../helpers/errors'\n\nexport default function makeQuitQuery({database}){\n    return Object.freeze({\n        add,\n        findById,\n        getQuit,\n        deleteById\n    });\n\n    async function getQuit ({ max = 100, before, after } = {}) {\n      \n        const db = await database;\n        const query = {};\n        if (before || after) {\n            query._id = {}\n            query._id = before ? { ...query._id, $lt: db.makeId(before) } : query._id\n            query._id = after ? { ...query._id, $gt: db.makeId(after) } : query._id\n        }\n\n        return (await db\n        .collection('Quit')\n        .find(query)\n        .limit(Number(max))\n        .toArray()).map(documentToQuit)\n    }\n\n\n    async function add ({ quitId, ...quit }) {\n      \n        const db = await database\n        if (quitId) {\n          quit_id = db.makeId(quitId)\n        }\n        const { result, ops } = await db\n          .collection('Quit')\n          .insertOne(quit)\n          .catch(mongoError => {\n            const [errorCode] = mongoError.message.split(' ')\n            if (errorCode === 'E11000') {\n              const [_, mongoIndex] = mongoError.message.split(':')[2].split(' ')\n              throw new UniqueConstraintError(\n                mongoIndex === 'ContactEmailIndex' ? 'emailAddress' : 'contactId'\n              )\n            }\n            throw mongoError\n          })\n        return {\n            success: result.ok === 1,\n            created: documentToQuit(ops[0])\n        }\n    } \n\n    async function findById ({ id }) {\n      const db = await database\n      const found = await db\n        .collection('Quit')\n        .findOne({ _id: db.makeId(id) })\n      if (found) {\n        return documentToQuit(found)\n      }\n      return {}\n    }\n\n\n    async function deleteById ({ id }) {\n      const db = await database\n\n      const { result } = await db.collection('Quit').deleteOne({\"_id\": db.makeId(id)})\n      if (result.n > 0){\n        return {\n          status: \"Success\"\n        }\n      }\n      else {\n        return {\n          status: \"Error\"\n        }\n      }\n    }\n\n    function documentToQuit ({ _id: id, ...doc }) {\n        return makeQuit({ id, ...doc })\n    }\n}"],"file":"quit-query.js"}