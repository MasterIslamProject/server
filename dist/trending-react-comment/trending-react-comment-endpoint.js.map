{"version":3,"sources":["../../src/trending-react-comment/trending-react-comment-endpoint.js"],"names":["makeTrendingReactCommentEndpointHandler","trendingReactCommentQuery","handle","httpRequest","method","postTrendingReactComment","getTrendingReactComment","deleteTrendingReactComment","statusCode","errorMessage","id","queryParams","react_id","comment_id","r_id","c_id","statux","status","max","before","after","undefined","result","findByReactId","headers","data","JSON","stringify","findByCommentId","findById","findByReactStatus","findByCommentStatus","trendingReactCommentInfo","body","parse","path","trendingReactComment","add","updatePicture","updatePassword","updateUser","e","message","UniqueConstraintError","InvalidPropertyError","RequiredParameterError","pathParams","deleteById","console","log","deleteByCommentId"],"mappings":"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","sourcesContent":["import {\n    UniqueConstraintError,\n    InvalidPropertyError,\n    RequiredParameterError\n  } from '../helpers/errors';\n  import makeHttpError from '../helpers/http-error';\n  import makeTrendingReactComment from './trending-react-comment';\n\nexport default function makeTrendingReactCommentEndpointHandler({trendingReactCommentQuery}){\n    return async function handle(httpRequest){\n        switch (httpRequest.method) {\n            case 'POST':\n              return postTrendingReactComment(httpRequest)\n      \n            case 'GET':\n              return getTrendingReactComment(httpRequest)\n           \n      \n            case 'DELETE':\n              return deleteTrendingReactComment(httpRequest)\n\n            default:\n              return makeHttpError({\n                statusCode: 405,\n                errorMessage: `${httpRequest.method} method not allowed.`\n              })\n        }\n    }\n\n    async function getTrendingReactComment (httpRequest) {\n\n      const { id } = httpRequest.queryParams || {}\n      const { react_id } = httpRequest.queryParams || {}\n      const { comment_id } = httpRequest.queryParams || {}\n      const { r_id } = httpRequest.queryParams || {}\n      const { c_id } = httpRequest.queryParams || {}\n      const { statux } = httpRequest.queryParams || {}\n      const { status } = httpRequest.queryParams || {}\n      const { max, before, after } = httpRequest.queryParams || {}\n\n      if (react_id !== undefined ){\n        \n        const result = await trendingReactCommentQuery.findByReactId({ react_id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (comment_id !== undefined ){\n        \n        const result = await trendingReactCommentQuery.findByCommentId({ comment_id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (id !== undefined ){\n        \n        const result = await trendingReactCommentQuery.findById({ id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (r_id !== undefined && statux !== undefined){\n        \n        const result = await trendingReactCommentQuery.findByReactStatus({ r_id, statux })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (c_id !== undefined && statux !== undefined){\n        \n        const result = await trendingReactCommentQuery.findByCommentStatus({ r_id, statux })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else {\n        const result = await trendingReactCommentQuery.getTrendingReactComment({ max, before, after })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n        \n      }\n\n        \n    }\n\n\n    async function postTrendingReactComment (httpRequest) {\n        let trendingReactCommentInfo = httpRequest.body\n        if (!trendingReactCommentInfo) {\n          return makeHttpError({\n            statusCode: 400,\n            errorMessage: 'Bad request. No POST body.'\n          })\n        }\n    \n        if (typeof httpRequest.body === 'string') {\n          try {\n            trendingReactCommentInfo = JSON.parse(trendingReactCommentInfo)\n          } catch {\n            return makeHttpError({\n              statusCode: 400,\n              errorMessage: 'Bad request. POST body must be valid JSON.'\n            })\n          }\n        }\n    \n        try {\n          if (httpRequest.path == '/trending-react-comment/add'){\n            const trendingReactComment = makeTrendingReactComment(trendingReactCommentInfo)\n            const result = await trendingReactCommentQuery.add(trendingReactComment)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n          else if (httpRequest.path == '/trending-react-comment/update-picture'){\n            const trendingReactComment = makeTrendingReactComment(trendingReactCommentInfo)\n            const result = await trendingReactCommentQuery.updatePicture(trendingReactComment)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n          else if (httpRequest.path == '/trending-react-comment/update-password'){\n            const trendingReactComment = makeTrendingReactComment(trendingReactCommentInfo)\n            const result = await trendingReactCommentQuery.updatePassword(trendingReactComment)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n          else {\n            const trendingReactComment = makeTrendingReactComment(trendingReactCommentInfo)\n            const result = await trendingReactCommentQuery.updateUser(trendingReactComment)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n        } catch (e) {\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n        }\n    }\n\n\n\n    async function deleteTrendingReactComment (httpRequest) {\n      const { id } = httpRequest.pathParams || {}\n      const { comment_id } = httpRequest.pathParams || {}\n  \n      if (id !== undefined ){\n        \n        try {\n          const result = await trendingReactCommentQuery.deleteById({ id })\n  \n          return {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            statusCode: 200,\n            data: JSON.stringify(result)\n          }\n        }\n        catch (e){\n          console.log(\"Error delete: \"+e )\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n  \n        }\n      }\n      else if (comment_id !== undefined){\n        try {\n          const result = await trendingReactCommentQuery.deleteByCommentId({ comment_id })\n          return {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            statusCode: 200,\n            data: JSON.stringify(result)\n          }\n        }\n        catch (e){\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n  \n        }\n      }\n      \n    }\n  \n\n}"],"file":"trending-react-comment-endpoint.js"}