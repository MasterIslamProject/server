{"version":3,"sources":["../../src/trending/trending-endpoint.js"],"names":["makeTrendingEndpointHandler","trendingQuery","handle","httpRequest","method","postTrending","getTrending","deleteTrending","statusCode","errorMessage","id","queryParams","category","max","before","after","undefined","result","findByCategory","headers","data","JSON","stringify","findById","console","log","trendingInfo","body","parse","path","trending","update","add","e","message","UniqueConstraintError","InvalidPropertyError","RequiredParameterError","pathParams","deleteById"],"mappings":"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","sourcesContent":["import {\n    UniqueConstraintError,\n    InvalidPropertyError,\n    RequiredParameterError\n  } from '../helpers/errors';\n  import makeHttpError from '../helpers/http-error';\n  import makeTrending from './trending';\n\nexport default function makeTrendingEndpointHandler({trendingQuery}){\n    return async function handle(httpRequest){\n        switch (httpRequest.method) {\n            case 'POST':\n              return postTrending(httpRequest)\n      \n            case 'GET':\n              return getTrending(httpRequest)\n      \n            case 'DELETE':\n              return deleteTrending(httpRequest)\n\n            default:\n              return makeHttpError({\n                statusCode: 405,\n                errorMessage: `${httpRequest.method} method not allowed.`\n              })\n        }\n    }\n\n    async function getTrending (httpRequest) {\n\n      const { id } = httpRequest.queryParams || {}\n      const { category } = httpRequest.queryParams || {}\n      const { max, before, after } = httpRequest.queryParams || {}\n\n      if (category !== undefined ){\n        \n        const result = await trendingQuery.findByCategory({ category })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (id !== undefined ){\n        \n        const result = await trendingQuery.findById({ id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else {\n        const result = await trendingQuery.getTrending({ max, before, after })\n        console.log(result)\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n        \n      }\n        \n    }\n\n    async function postTrending (httpRequest) {\n        let trendingInfo = httpRequest.body\n        if (!trendingInfo) {\n          return makeHttpError({\n            statusCode: 400,\n            errorMessage: 'Bad request. No POST body.'\n          })\n        }\n    \n        if (typeof httpRequest.body === 'string') {\n          try {\n            trendingInfo = JSON.parse(trendingInfo)\n          } catch {\n            return makeHttpError({\n              statusCode: 400,\n              errorMessage: 'Bad request. POST body must be valid JSON.'\n            })\n          }\n        }\n    \n        try {\n\n          if (httpRequest.path == '/trending/update'){\n            \n            const trending = makeTrending(trendingInfo)\n            const result = await trendingQuery.update(trending)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n          else {\n            const trending = makeTrending(trendingInfo)\n            const result = await trendingQuery.add(trending)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n          \n        } catch (e) {\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n        }\n    }\n\n\n    async function deleteTrending (httpRequest) {\n      const { id } = httpRequest.pathParams || {}\n  \n      try {\n        const result = await trendingQuery.deleteById({ id })\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n      }\n      catch (e){\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n\n      }\n      \n    }\n  \n\n}"],"file":"trending-endpoint.js"}