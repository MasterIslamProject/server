{"version":3,"sources":["../../src/trending/trending-query.js"],"names":["makeTrendingQuery","database","Object","freeze","add","findById","findByCategory","getTrending","deleteById","update","max","before","after","db","query","_id","$lt","makeId","$gt","collection","find","sort","date","limit","Number","toArray","map","documentToTrending","trendingId","trending","result","ops","insertOne","catch","mongoError","errorCode","message","split","_","mongoIndex","UniqueConstraintError","success","ok","created","id","newSet","$set","topic","category","caption","thumbnail","banner","num_response","video","type","keywords","updateOne","upsert","status","found","findOne","deleteOne","n","doc"],"mappings":"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","sourcesContent":["import makeTrending from './trending'\nimport { UniqueConstraintError } from '../helpers/errors'\n\nexport default function makeTrendingQuery({database}){\n    return Object.freeze({\n        add,\n        findById,\n        findByCategory,\n        getTrending,\n        //deleteByTopic,\n        deleteById,\n        update\n    });\n\n    async function getTrending ({ max = 100, before, after } = {}) {\n        const db = await database;\n        const query = {}\n        if (before || after) {\n        query._id = {}\n        query._id = before ? { ...query._id, $lt: db.makeId(before) } : query._id\n        query._id = after ? { ...query._id, $gt: db.makeId(after) } : query._id\n        }\n\n        return (await db\n        .collection('Trending')\n        .find(query)\n        .sort( { date: -1 } )\n        .limit(Number(max))\n        .toArray()).map(documentToTrending)\n    }\n\n\n    async function add ({ trendingId, ...trending }) {\n        const db = await database\n        if (trendingId) {\n          trending._id = db.makeId(trendingId)\n        }\n        const { result, ops } = await db\n          .collection('Trending')\n          .insertOne(trending)\n          .catch(mongoError => {\n            const [errorCode] = mongoError.message.split(' ')\n            if (errorCode === 'E11000') {\n              const [_, mongoIndex] = mongoError.message.split(':')[2].split(' ')\n              throw new UniqueConstraintError(\n                \n              )\n            }\n            throw mongoError\n          })\n        return {\n            success: result.ok === 1,\n            created: documentToTrending(ops[0])\n        }\n    }\n\n  async function update ({ id, ...trending }) {\n      \n      const db = await database\n      const query = {\n        _id: db.makeId(id)\n      }\n      \n      const newSet = {\n        $set : {\n          topic: trending.category,\n          caption: trending.caption,\n          thumbnail: trending.banner,\n          num_response: trending.num_response,\n          video: trending.video,\n          type: trending.type,\n          keywords: trending.keywords,\n          date: trending.date\n        } \n      }\n      /*if (id) {\n        _id = db.makeId(id)\n      }*/\n      const { result } = await db\n        .collection('Trending')\n        .updateOne(query, newSet, {upsert:true})\n\n        if (result) {\n          return {\n            status: \"success\",\n            message: \"Updated successfully\"\n          }\n        }\n        else {\n          return {\n            status: \"error\",\n            message: \"Error updating\"\n          }\n        }\n      \n  }\n\n    \n  async function findById ({ id }) {\n    const db = await database\n    const found = await db\n      .collection('Trending')\n      .findOne({ _id: db.makeId(id) })\n    if (found) {\n      return documentToTrending(found)\n    }\n    return {}\n  }\n\n  async function findByCategory({ category }) {\n    const db = await database;\n    \n    return (await db\n      .collection('Trending')\n      .find({ category: category })\n      .sort( { date: -1 } )\n      .toArray()).map(documentToTrending)\n  }\n\n  \n  async function deleteById ({ id }) {\n    const db = await database\n\n    const { result } = await db.collection('Trending').deleteOne({\"_id\": db.makeId(id)})\n    if (result.n > 0){\n      return {\n        status: \"Success\"\n      }\n    }\n    else {\n      return {\n        status: \"Error\"\n      }\n    }\n  }\n\n  function documentToTrending ({ _id: id, ...doc }) {\n    return makeTrending({ id, ...doc })\n  }\n}"],"file":"trending-query.js"}