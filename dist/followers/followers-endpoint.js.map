{"version":3,"sources":["../../src/followers/followers-endpoint.js"],"names":["makeFollowersEndpointHandler","followersQuery","handle","httpRequest","method","postFollowers","getFollowers","updateFollowers","deleteFollowers","statusCode","errorMessage","id","queryParams","mid","memid","m_id","mem_id","max","before","after","undefined","result","findByMentorId","headers","data","JSON","stringify","findByMemberId","findByBoth","findById","followersInfo","body","parse","path","followers","verify","updateMember","updateMemberPicture","updateMemberPassword","updateMentor","updateMentorPicture","updateMentorPassword","add","e","message","UniqueConstraintError","InvalidPropertyError","RequiredParameterError","update","pathParams","member_id","mentor_id","deleteByUnfollow","deleteByMemberId","deleteByMentorId","deleteById"],"mappings":"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","sourcesContent":["import {\n    UniqueConstraintError,\n    InvalidPropertyError,\n    RequiredParameterError\n  } from '../helpers/errors';\n  import makeHttpError from '../helpers/http-error';\n  import makeFollowers from './followers';\n\nexport default function makeFollowersEndpointHandler({followersQuery}){\n    return async function handle(httpRequest){\n        switch (httpRequest.method) {\n            case 'POST':\n              return postFollowers(httpRequest)\n      \n            case 'GET':\n              return getFollowers(httpRequest)\n\n            case 'PUT':\n              return updateFollowers(httpRequest)\n      \n            case 'DELETE':\n              return deleteFollowers(httpRequest)\n\n\n            default:\n              return makeHttpError({\n                statusCode: 405,\n                errorMessage: `${httpRequest.method} method not allowed.`\n              })\n        }\n    }\n\n    async function getFollowers (httpRequest) {\n\n      const { id } = httpRequest.queryParams || {}\n      const { mid } = httpRequest.queryParams || {} \n      const { memid } = httpRequest.queryParams || {} \n      const { m_id, mem_id } = httpRequest.queryParams || {} \n      const { max, before, after } = httpRequest.queryParams || {}\n\n      if (mid !== undefined ){\n        const result = await followersQuery.findByMentorId({ mid })\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (memid !== undefined ){\n        \n        const result = await followersQuery.findByMemberId({ memid })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else if (m_id !== undefined){\n       \n        const result = await followersQuery.findByBoth({ m_id, mem_id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n     \n      else if (id !== undefined ){\n        const result = await followersQuery.findById({ id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n\n      }\n      else {\n        const result = await followersQuery.getFollowers({ max, before, after })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n        \n      }\n        \n    }\n    \n\n    async function postFollowers (httpRequest) {\n        let followersInfo = httpRequest.body\n        if (!followersInfo) {\n          return makeHttpError({\n            statusCode: 400,\n            errorMessage: 'Bad request. No POST body.'\n          })\n        }\n    \n        if (typeof httpRequest.body === 'string') {\n          try {\n            followersInfo = JSON.parse(followersInfo)\n          } catch {\n            return makeHttpError({\n              statusCode: 400,\n              errorMessage: 'Bad request. POST body must be valid JSON.'\n            })\n          }\n        }\n    \n        try {\n\n          if (httpRequest.path == '/follower/verify'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.verify(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else if (httpRequest.path == '/follower/update-member'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.updateMember(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else if (httpRequest.path == '/follower/update-member-picture'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.updateMemberPicture(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else if (httpRequest.path == '/follower/update-member-password'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.updateMemberPassword(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else if (httpRequest.path == '/follower/update-mentor'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.updateMentor(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else if (httpRequest.path == '/follower/update-mentor-picture'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.updateMentorPicture(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else if (httpRequest.path == '/follower/update-mentor-password'){\n            const followers = makeFollowers(followersInfo)\n           \n            const result = await followersQuery.updateMentorPassword(followers);\n            return {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                statusCode: 201,\n                data: JSON.stringify(result)\n              }\n          }\n          else {\n            const followers = makeFollowers(followersInfo)\n            const result = await followersQuery.add(followers)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          }\n          \n        } catch (e) {\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n        }\n    }\n\n\n  async function updateFollowers (httpRequest) {\n    \n    let followersInfo = httpRequest.body\n    \n    if (!followersInfo) {\n      return makeHttpError({\n        statusCode: 400,\n        errorMessage: 'Bad request. No POST body.'\n      })\n    }\n\n    if (typeof httpRequest.body === 'string') {\n      try {\n        followersInfo = JSON.parse(followersInfo)\n      } catch {\n        return makeHttpError({\n          statusCode: 400,\n          errorMessage: 'Bad request. POST body must be valid JSON.'\n        })\n      }\n    }\n\n    try {\n      const followers = makeFollowers(followersInfo);\n      const result = await followersQuery.update(followers)\n      return {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        statusCode: 201,\n        data: JSON.stringify(result)\n      }\n    } catch (e) {\n      return makeHttpError({\n        errorMessage: e.message,\n        statusCode:\n          e instanceof UniqueConstraintError\n            ? 409\n            : e instanceof InvalidPropertyError ||\n              e instanceof RequiredParameterError\n              ? 400\n              : 500\n      })\n    }\n  }\n\n  async function deleteFollowers (httpRequest) {\n    const { id } = httpRequest.pathParams || {}\n    const { mid } = httpRequest.pathParams || {}\n    const { memid } = httpRequest.pathParams || {}\n    const { member_id } = httpRequest.pathParams || {}\n    const { mentor_id } = httpRequest.pathParams || {}\n\n   // const { customer_id } = httpRequest.pathParams || {}\n\n    if (mid !== undefined ){\n      try {\n        const result = await followersQuery.deleteByUnfollow({ mid, memid })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n      }\n      catch (e){\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n\n      }\n    }\n    else if (member_id !== undefined ){\n      try {\n        const result = await followersQuery.deleteByMemberId({ member_id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n      }\n      catch (e){\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n\n      }\n    }\n    else if (mentor_id !== undefined ){\n      try {\n        const result = await followersQuery.deleteByMentorId({ mentor_id })\n\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n      }\n      catch (e){\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n\n      }\n    }\n    else {\n     \n      try {\n        const result = await followersQuery.deleteById({ id })\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          statusCode: 200,\n          data: JSON.stringify(result)\n        }\n      }\n      catch (e){\n        return makeHttpError({\n          errorMessage: e.message,\n          statusCode:\n            e instanceof UniqueConstraintError\n              ? 409\n              : e instanceof InvalidPropertyError ||\n                e instanceof RequiredParameterError\n                ? 400\n                : 500\n        })\n\n      }\n    }\n    \n  }\n\n}"],"file":"followers-endpoint.js"}